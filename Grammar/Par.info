-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Grammar/Par.y
-----------------------------------------------------------------------------


rule 59 is unused
rule 60 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Expr6 -> Ident                                     (4)
	Expr6 -> Integer                                   (5)
	Expr6 -> 'True'                                    (6)
	Expr6 -> 'False'                                   (7)
	Expr6 -> Ident '(' ListExpr ')'                    (8)
	Expr6 -> String                                    (9)
	Expr6 -> '(' Expr ')'                              (10)
	Expr5 -> '-' Expr6                                 (11)
	Expr5 -> '!' Expr6                                 (12)
	Expr5 -> Expr6                                     (13)
	Expr4 -> Expr4 MulOp Expr5                         (14)
	Expr4 -> Expr5                                     (15)
	Expr3 -> Expr3 AddOp Expr4                         (16)
	Expr3 -> Expr4                                     (17)
	Expr2 -> Expr2 RelOp Expr3                         (18)
	Expr2 -> Expr3                                     (19)
	Expr1 -> Expr2 '&&' Expr1                          (20)
	Expr1 -> Expr2                                     (21)
	Expr -> Expr1 '||' Expr                            (22)
	Expr -> Expr1                                      (23)
	ListExpr ->                                        (24)
	ListExpr -> Expr                                   (25)
	ListExpr -> Expr ',' ListExpr                      (26)
	AddOp -> '+'                                       (27)
	AddOp -> '-'                                       (28)
	MulOp -> '*'                                       (29)
	MulOp -> '/'                                       (30)
	MulOp -> '%'                                       (31)
	RelOp -> '<'                                       (32)
	RelOp -> '<='                                      (33)
	RelOp -> '>'                                       (34)
	RelOp -> '>='                                      (35)
	RelOp -> '=='                                      (36)
	RelOp -> '!='                                      (37)
	Inst -> Ident '=' Expr                             (38)
	Inst -> 'if' '(' Expr ')' 'then' Block 'else' Block   (39)
	Inst -> 'if' '(' Expr ')' 'then' Block             (40)
	Inst -> Type Ident '=' Expr                        (41)
	Inst -> 'while' '(' Expr ')' Block                 (42)
	Inst -> 'function' Ident '(' ListArg ')' Block     (43)
	Inst -> Expr                                       (44)
	Inst -> 'print' '(' Expr ')'                       (45)
	Arg -> Type Ident                                  (46)
	Arg -> '&' Type Ident                              (47)
	ListArg ->                                         (48)
	ListArg -> Arg                                     (49)
	ListArg -> Arg ',' ListArg                         (50)
	Type -> 'int'                                      (51)
	Type -> 'bool'                                     (52)
	Type -> 'string'                                   (53)
	Type -> 'void'                                     (54)
	ListInst ->                                        (55)
	ListInst -> Inst                                   (56)
	ListInst -> Inst ';' ListInst                      (57)
	Block -> '{' ListInst '}'                          (58)
	ListBlock ->                                       (59)
	ListBlock -> Block ListBlock                       (60)
	Program -> ListInst                                (61)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	';'            { PT _ (TS _ 13) }
	'<'            { PT _ (TS _ 14) }
	'<='           { PT _ (TS _ 15) }
	'='            { PT _ (TS _ 16) }
	'=='           { PT _ (TS _ 17) }
	'>'            { PT _ (TS _ 18) }
	'>='           { PT _ (TS _ 19) }
	'False'        { PT _ (TS _ 20) }
	'True'         { PT _ (TS _ 21) }
	'bool'         { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'function'     { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'print'        { PT _ (TS _ 27) }
	'string'       { PT _ (TS _ 28) }
	'then'         { PT _ (TS _ 29) }
	'void'         { PT _ (TS _ 30) }
	'while'        { PT _ (TS _ 31) }
	'{'            { PT _ (TS _ 32) }
	'||'           { PT _ (TS _ 33) }
	'}'            { PT _ (TS _ 34) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Expr6           rules 4, 5, 6, 7, 8, 9, 10
	Expr5           rules 11, 12, 13
	Expr4           rules 14, 15
	Expr3           rules 16, 17
	Expr2           rules 18, 19
	Expr1           rules 20, 21
	Expr            rules 22, 23
	ListExpr        rules 24, 25, 26
	AddOp           rules 27, 28
	MulOp           rules 29, 30, 31
	RelOp           rules 32, 33, 34, 35, 36, 37
	Inst            rules 38, 39, 40, 41, 42, 43, 44, 45
	Arg             rules 46, 47
	ListArg         rules 48, 49, 50
	Type            rules 51, 52, 53, 54
	ListInst        rules 55, 56, 57
	Block           rule  58
	ListBlock       rules 59, 60
	Program         rule  61

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	'bool'         shift, and enter state 22
	'function'     shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'print'        shift, and enter state 26
	'string'       shift, and enter state 27
	'void'         shift, and enter state 28
	'while'        shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31
	%eof           reduce using rule 55

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 12
	Inst           goto state 13
	Type           goto state 14
	ListInst       goto state 15
	Program        goto state 16

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1
	%eof           reduce using rule 1


State 3

	Expr6 -> Ident .                                    (rule 4)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 8)
	Inst -> Ident . '=' Expr                            (rule 38)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	'('            shift, and enter state 58
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'='            shift, and enter state 59
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'||'           reduce using rule 4
	'}'            reduce using rule 4
	%eof           reduce using rule 4


State 4

	Expr6 -> Integer .                                  (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'/'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	%eof           reduce using rule 5


State 5

	Expr6 -> String .                                   (rule 9)

	'!='           reduce using rule 9
	'%'            reduce using rule 9
	'&&'           reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	'+'            reduce using rule 9
	','            reduce using rule 9
	'-'            reduce using rule 9
	'/'            reduce using rule 9
	';'            reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'=='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	'||'           reduce using rule 9
	'}'            reduce using rule 9
	%eof           reduce using rule 9


State 6

	Expr5 -> Expr6 .                                    (rule 13)

	'!='           reduce using rule 13
	'%'            reduce using rule 13
	'&&'           reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'/'            reduce using rule 13
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 7

	Expr4 -> Expr5 .                                    (rule 15)

	'!='           reduce using rule 15
	'%'            reduce using rule 15
	'&&'           reduce using rule 15
	')'            reduce using rule 15
	'*'            reduce using rule 15
	'+'            reduce using rule 15
	','            reduce using rule 15
	'-'            reduce using rule 15
	'/'            reduce using rule 15
	';'            reduce using rule 15
	'<'            reduce using rule 15
	'<='           reduce using rule 15
	'=='           reduce using rule 15
	'>'            reduce using rule 15
	'>='           reduce using rule 15
	'||'           reduce using rule 15
	'}'            reduce using rule 15
	%eof           reduce using rule 15


State 8

	Expr4 -> Expr4 . MulOp Expr5                        (rule 14)
	Expr3 -> Expr4 .                                    (rule 17)

	'!='           reduce using rule 17
	'%'            shift, and enter state 55
	'&&'           reduce using rule 17
	')'            reduce using rule 17
	'*'            shift, and enter state 56
	'+'            reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	'/'            shift, and enter state 57
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'||'           reduce using rule 17
	'}'            reduce using rule 17
	%eof           reduce using rule 17

	MulOp          goto state 54

State 9

	Expr3 -> Expr3 . AddOp Expr4                        (rule 16)
	Expr2 -> Expr3 .                                    (rule 19)

	'!='           reduce using rule 19
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'+'            shift, and enter state 52
	','            reduce using rule 19
	'-'            shift, and enter state 53
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19
	%eof           reduce using rule 19

	AddOp          goto state 51

State 10

	Expr2 -> Expr2 . RelOp Expr3                        (rule 18)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 20)
	Expr1 -> Expr2 .                                    (rule 21)

	'!='           shift, and enter state 44
	'&&'           shift, and enter state 45
	')'            reduce using rule 21
	','            reduce using rule 21
	';'            reduce using rule 21
	'<'            shift, and enter state 46
	'<='           shift, and enter state 47
	'=='           shift, and enter state 48
	'>'            shift, and enter state 49
	'>='           shift, and enter state 50
	'||'           reduce using rule 21
	'}'            reduce using rule 21
	%eof           reduce using rule 21

	RelOp          goto state 43

State 11

	Expr -> Expr1 . '||' Expr                           (rule 22)
	Expr -> Expr1 .                                     (rule 23)

	')'            reduce using rule 23
	','            reduce using rule 23
	';'            reduce using rule 23
	'||'           shift, and enter state 42
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 12

	Inst -> Expr .                                      (rule 44)

	';'            reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 13

	ListInst -> Inst .                                  (rule 56)
	ListInst -> Inst . ';' ListInst                     (rule 57)

	';'            shift, and enter state 41
	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 14

	Inst -> Type . Ident '=' Expr                       (rule 41)

	L_Ident        shift, and enter state 2

	Ident          goto state 40

State 15

	Program -> ListInst .                               (rule 61)

	%eof           reduce using rule 61


State 16

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 17

	Expr5 -> '!' . Expr6                                (rule 12)

	'('            shift, and enter state 18
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 39

State 18

	Expr6 -> '(' . Expr ')'                             (rule 10)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 38

State 19

	Expr5 -> '-' . Expr6                                (rule 11)

	'('            shift, and enter state 18
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 37

State 20

	Expr6 -> 'False' .                                  (rule 7)

	'!='           reduce using rule 7
	'%'            reduce using rule 7
	'&&'           reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'+'            reduce using rule 7
	','            reduce using rule 7
	'-'            reduce using rule 7
	'/'            reduce using rule 7
	';'            reduce using rule 7
	'<'            reduce using rule 7
	'<='           reduce using rule 7
	'=='           reduce using rule 7
	'>'            reduce using rule 7
	'>='           reduce using rule 7
	'||'           reduce using rule 7
	'}'            reduce using rule 7
	%eof           reduce using rule 7


State 21

	Expr6 -> 'True' .                                   (rule 6)

	'!='           reduce using rule 6
	'%'            reduce using rule 6
	'&&'           reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'+'            reduce using rule 6
	','            reduce using rule 6
	'-'            reduce using rule 6
	'/'            reduce using rule 6
	';'            reduce using rule 6
	'<'            reduce using rule 6
	'<='           reduce using rule 6
	'=='           reduce using rule 6
	'>'            reduce using rule 6
	'>='           reduce using rule 6
	'||'           reduce using rule 6
	'}'            reduce using rule 6
	%eof           reduce using rule 6


State 22

	Type -> 'bool' .                                    (rule 52)

	L_Ident        reduce using rule 52


State 23

	Inst -> 'function' . Ident '(' ListArg ')' Block    (rule 43)

	L_Ident        shift, and enter state 2

	Ident          goto state 35

State 24

	Inst -> 'if' . '(' Expr ')' 'then' Block 'else' Block    (rule 39)
	Inst -> 'if' . '(' Expr ')' 'then' Block            (rule 40)

	'('            shift, and enter state 34


State 25

	Type -> 'int' .                                     (rule 51)

	L_Ident        reduce using rule 51


State 26

	Inst -> 'print' . '(' Expr ')'                      (rule 45)

	'('            shift, and enter state 33


State 27

	Type -> 'string' .                                  (rule 53)

	L_Ident        reduce using rule 53


State 28

	Type -> 'void' .                                    (rule 54)

	L_Ident        reduce using rule 54


State 29

	Inst -> 'while' . '(' Expr ')' Block                (rule 42)

	'('            shift, and enter state 32


State 30

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2
	%eof           reduce using rule 2


State 31

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3
	%eof           reduce using rule 3


State 32

	Inst -> 'while' '(' . Expr ')' Block                (rule 42)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 74

State 33

	Inst -> 'print' '(' . Expr ')'                      (rule 45)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 73

State 34

	Inst -> 'if' '(' . Expr ')' 'then' Block 'else' Block    (rule 39)
	Inst -> 'if' '(' . Expr ')' 'then' Block            (rule 40)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 72

State 35

	Inst -> 'function' Ident . '(' ListArg ')' Block    (rule 43)

	'('            shift, and enter state 71


State 36

	Expr6 -> Ident .                                    (rule 4)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 8)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	'('            shift, and enter state 58
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'||'           reduce using rule 4
	'}'            reduce using rule 4
	%eof           reduce using rule 4


State 37

	Expr5 -> '-' Expr6 .                                (rule 11)

	'!='           reduce using rule 11
	'%'            reduce using rule 11
	'&&'           reduce using rule 11
	')'            reduce using rule 11
	'*'            reduce using rule 11
	'+'            reduce using rule 11
	','            reduce using rule 11
	'-'            reduce using rule 11
	'/'            reduce using rule 11
	';'            reduce using rule 11
	'<'            reduce using rule 11
	'<='           reduce using rule 11
	'=='           reduce using rule 11
	'>'            reduce using rule 11
	'>='           reduce using rule 11
	'||'           reduce using rule 11
	'}'            reduce using rule 11
	%eof           reduce using rule 11


State 38

	Expr6 -> '(' Expr . ')'                             (rule 10)

	')'            shift, and enter state 70


State 39

	Expr5 -> '!' Expr6 .                                (rule 12)

	'!='           reduce using rule 12
	'%'            reduce using rule 12
	'&&'           reduce using rule 12
	')'            reduce using rule 12
	'*'            reduce using rule 12
	'+'            reduce using rule 12
	','            reduce using rule 12
	'-'            reduce using rule 12
	'/'            reduce using rule 12
	';'            reduce using rule 12
	'<'            reduce using rule 12
	'<='           reduce using rule 12
	'=='           reduce using rule 12
	'>'            reduce using rule 12
	'>='           reduce using rule 12
	'||'           reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 40

	Inst -> Type Ident . '=' Expr                       (rule 41)

	'='            shift, and enter state 69


State 41

	ListInst -> Inst ';' . ListInst                     (rule 57)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	'bool'         shift, and enter state 22
	'function'     shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'print'        shift, and enter state 26
	'string'       shift, and enter state 27
	'void'         shift, and enter state 28
	'while'        shift, and enter state 29
	'}'            reduce using rule 55
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31
	%eof           reduce using rule 55

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 12
	Inst           goto state 13
	Type           goto state 14
	ListInst       goto state 68

State 42

	Expr -> Expr1 '||' . Expr                           (rule 22)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 67

State 43

	Expr2 -> Expr2 RelOp . Expr3                        (rule 18)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 66

State 44

	RelOp -> '!=' .                                     (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	'False'        reduce using rule 37
	'True'         reduce using rule 37
	L_Ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 45

	Expr1 -> Expr2 '&&' . Expr1                         (rule 20)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 65

State 46

	RelOp -> '<' .                                      (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	'False'        reduce using rule 32
	'True'         reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 47

	RelOp -> '<=' .                                     (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	'False'        reduce using rule 33
	'True'         reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 48

	RelOp -> '==' .                                     (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	'False'        reduce using rule 36
	'True'         reduce using rule 36
	L_Ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36


State 49

	RelOp -> '>' .                                      (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	'False'        reduce using rule 34
	'True'         reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 50

	RelOp -> '>=' .                                     (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	'False'        reduce using rule 35
	'True'         reduce using rule 35
	L_Ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


State 51

	Expr3 -> Expr3 AddOp . Expr4                        (rule 16)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 64

State 52

	AddOp -> '+' .                                      (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	'False'        reduce using rule 27
	'True'         reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 53

	AddOp -> '-' .                                      (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	'False'        reduce using rule 28
	'True'         reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 54

	Expr4 -> Expr4 MulOp . Expr5                        (rule 14)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 63

State 55

	MulOp -> '%' .                                      (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	'False'        reduce using rule 31
	'True'         reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 56

	MulOp -> '*' .                                      (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	'False'        reduce using rule 29
	'True'         reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 57

	MulOp -> '/' .                                      (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	'False'        reduce using rule 30
	'True'         reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 58

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 8)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	')'            reduce using rule 24
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 61
	ListExpr       goto state 62

State 59

	Inst -> Ident '=' . Expr                            (rule 38)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 60

State 60

	Inst -> Ident '=' Expr .                            (rule 38)

	';'            reduce using rule 38
	'}'            reduce using rule 38
	%eof           reduce using rule 38


State 61

	ListExpr -> Expr .                                  (rule 25)
	ListExpr -> Expr . ',' ListExpr                     (rule 26)

	')'            reduce using rule 25
	','            shift, and enter state 84


State 62

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 8)

	')'            shift, and enter state 83


State 63

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 14)

	'!='           reduce using rule 14
	'%'            reduce using rule 14
	'&&'           reduce using rule 14
	')'            reduce using rule 14
	'*'            reduce using rule 14
	'+'            reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	'/'            reduce using rule 14
	';'            reduce using rule 14
	'<'            reduce using rule 14
	'<='           reduce using rule 14
	'=='           reduce using rule 14
	'>'            reduce using rule 14
	'>='           reduce using rule 14
	'||'           reduce using rule 14
	'}'            reduce using rule 14
	%eof           reduce using rule 14


State 64

	Expr4 -> Expr4 . MulOp Expr5                        (rule 14)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 16)

	'!='           reduce using rule 16
	'%'            shift, and enter state 55
	'&&'           reduce using rule 16
	')'            reduce using rule 16
	'*'            shift, and enter state 56
	'+'            reduce using rule 16
	','            reduce using rule 16
	'-'            reduce using rule 16
	'/'            shift, and enter state 57
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16
	%eof           reduce using rule 16

	MulOp          goto state 54

State 65

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 20)

	')'            reduce using rule 20
	','            reduce using rule 20
	';'            reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 66

	Expr3 -> Expr3 . AddOp Expr4                        (rule 16)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 18)

	'!='           reduce using rule 18
	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'+'            shift, and enter state 52
	','            reduce using rule 18
	'-'            shift, and enter state 53
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	%eof           reduce using rule 18

	AddOp          goto state 51

State 67

	Expr -> Expr1 '||' Expr .                           (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22
	';'            reduce using rule 22
	'}'            reduce using rule 22
	%eof           reduce using rule 22


State 68

	ListInst -> Inst ';' ListInst .                     (rule 57)

	'}'            reduce using rule 57
	%eof           reduce using rule 57


State 69

	Inst -> Type Ident '=' . Expr                       (rule 41)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 82

State 70

	Expr6 -> '(' Expr ')' .                             (rule 10)

	'!='           reduce using rule 10
	'%'            reduce using rule 10
	'&&'           reduce using rule 10
	')'            reduce using rule 10
	'*'            reduce using rule 10
	'+'            reduce using rule 10
	','            reduce using rule 10
	'-'            reduce using rule 10
	'/'            reduce using rule 10
	';'            reduce using rule 10
	'<'            reduce using rule 10
	'<='           reduce using rule 10
	'=='           reduce using rule 10
	'>'            reduce using rule 10
	'>='           reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


State 71

	Inst -> 'function' Ident '(' . ListArg ')' Block    (rule 43)

	'&'            shift, and enter state 81
	')'            reduce using rule 48
	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 27
	'void'         shift, and enter state 28

	Arg            goto state 78
	ListArg        goto state 79
	Type           goto state 80

State 72

	Inst -> 'if' '(' Expr . ')' 'then' Block 'else' Block    (rule 39)
	Inst -> 'if' '(' Expr . ')' 'then' Block            (rule 40)

	')'            shift, and enter state 77


State 73

	Inst -> 'print' '(' Expr . ')'                      (rule 45)

	')'            shift, and enter state 76


State 74

	Inst -> 'while' '(' Expr . ')' Block                (rule 42)

	')'            shift, and enter state 75


State 75

	Inst -> 'while' '(' Expr ')' . Block                (rule 42)

	'{'            shift, and enter state 92

	Block          goto state 91

State 76

	Inst -> 'print' '(' Expr ')' .                      (rule 45)

	';'            reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 77

	Inst -> 'if' '(' Expr ')' . 'then' Block 'else' Block    (rule 39)
	Inst -> 'if' '(' Expr ')' . 'then' Block            (rule 40)

	'then'         shift, and enter state 90


State 78

	ListArg -> Arg .                                    (rule 49)
	ListArg -> Arg . ',' ListArg                        (rule 50)

	')'            reduce using rule 49
	','            shift, and enter state 89


State 79

	Inst -> 'function' Ident '(' ListArg . ')' Block    (rule 43)

	')'            shift, and enter state 88


State 80

	Arg -> Type . Ident                                 (rule 46)

	L_Ident        shift, and enter state 2

	Ident          goto state 87

State 81

	Arg -> '&' . Type Ident                             (rule 47)

	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 27
	'void'         shift, and enter state 28

	Type           goto state 86

State 82

	Inst -> Type Ident '=' Expr .                       (rule 41)

	';'            reduce using rule 41
	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 83

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 8)

	'!='           reduce using rule 8
	'%'            reduce using rule 8
	'&&'           reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'+'            reduce using rule 8
	','            reduce using rule 8
	'-'            reduce using rule 8
	'/'            reduce using rule 8
	';'            reduce using rule 8
	'<'            reduce using rule 8
	'<='           reduce using rule 8
	'=='           reduce using rule 8
	'>'            reduce using rule 8
	'>='           reduce using rule 8
	'||'           reduce using rule 8
	'}'            reduce using rule 8
	%eof           reduce using rule 8


State 84

	ListExpr -> Expr ',' . ListExpr                     (rule 26)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	')'            reduce using rule 24
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 36
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 61
	ListExpr       goto state 85

State 85

	ListExpr -> Expr ',' ListExpr .                     (rule 26)

	')'            reduce using rule 26


State 86

	Arg -> '&' Type . Ident                             (rule 47)

	L_Ident        shift, and enter state 2

	Ident          goto state 97

State 87

	Arg -> Type Ident .                                 (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46


State 88

	Inst -> 'function' Ident '(' ListArg ')' . Block    (rule 43)

	'{'            shift, and enter state 92

	Block          goto state 96

State 89

	ListArg -> Arg ',' . ListArg                        (rule 50)

	'&'            shift, and enter state 81
	')'            reduce using rule 48
	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 27
	'void'         shift, and enter state 28

	Arg            goto state 78
	ListArg        goto state 95
	Type           goto state 80

State 90

	Inst -> 'if' '(' Expr ')' 'then' . Block 'else' Block    (rule 39)
	Inst -> 'if' '(' Expr ')' 'then' . Block            (rule 40)

	'{'            shift, and enter state 92

	Block          goto state 94

State 91

	Inst -> 'while' '(' Expr ')' Block .                (rule 42)

	';'            reduce using rule 42
	'}'            reduce using rule 42
	%eof           reduce using rule 42


State 92

	Block -> '{' . ListInst '}'                         (rule 58)

	'!'            shift, and enter state 17
	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'False'        shift, and enter state 20
	'True'         shift, and enter state 21
	'bool'         shift, and enter state 22
	'function'     shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'print'        shift, and enter state 26
	'string'       shift, and enter state 27
	'void'         shift, and enter state 28
	'while'        shift, and enter state 29
	'}'            reduce using rule 55
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 6
	Expr5          goto state 7
	Expr4          goto state 8
	Expr3          goto state 9
	Expr2          goto state 10
	Expr1          goto state 11
	Expr           goto state 12
	Inst           goto state 13
	Type           goto state 14
	ListInst       goto state 93

State 93

	Block -> '{' ListInst . '}'                         (rule 58)

	'}'            shift, and enter state 99


State 94

	Inst -> 'if' '(' Expr ')' 'then' Block . 'else' Block    (rule 39)
	Inst -> 'if' '(' Expr ')' 'then' Block .            (rule 40)

	';'            reduce using rule 40
	'else'         shift, and enter state 98
	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 95

	ListArg -> Arg ',' ListArg .                        (rule 50)

	')'            reduce using rule 50


State 96

	Inst -> 'function' Ident '(' ListArg ')' Block .    (rule 43)

	';'            reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 97

	Arg -> '&' Type Ident .                             (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47


State 98

	Inst -> 'if' '(' Expr ')' 'then' Block 'else' . Block    (rule 39)

	'{'            shift, and enter state 92

	Block          goto state 100

State 99

	Block -> '{' ListInst '}' .                         (rule 58)

	';'            reduce using rule 58
	'else'         reduce using rule 58
	'}'            reduce using rule 58
	%eof           reduce using rule 58


State 100

	Inst -> 'if' '(' Expr ')' 'then' Block 'else' Block .    (rule 39)

	';'            reduce using rule 39
	'}'            reduce using rule 39
	%eof           reduce using rule 39


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 62
Number of terminals: 37
Number of non-terminals: 23
Number of states: 101
